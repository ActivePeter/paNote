backend:
    dir: "../pa_note_server.wasm/panote_list/src/gen_api.rs"
    lan: "rs"
    specs: ["no_async"]
    header: ""
    transform: |
        #[no_mangle]
        fn {{}}(http_json_ptr: i32, http_json_len: i32) {
            let json_str = unsafe {
                String::from_raw_parts(
                    http_json_ptr as *mut u8,
                    http_json_len as usize,
                    http_json_len as usize,
                )
            };
            if let Ok(req) = serde_json::from_str(&json_str) {
                let resp = super::Impl.handle_{{}}(req).serialize();
                let resp_str = serde_json::to_string(&resp).unwrap();
                unsafe { super::write_result(resp_str.as_ptr(), resp_str.len() as i32) }
            }
        }
frontend:
    dir: "../pa_note_front/src/logic/gen_api_list.ts"
    lan: "ts"
    header: 'import axios from "axios"'
    http_call: 'await axios.post("/api/panote_list/{}", {})'

structs:

api_list:

    get_notes_mata:
        req:
        resp_dispatch:
            Succ:
                node_id_name_list: [Array,[Array,String]]
        root: false

    create_new_note:
        req:
        resp_dispatch:
            Succ:
        root: true

    rename_note:
        req:
            noteid: String
            name: String
        resp_dispatch:
            Succ:
        root: true
